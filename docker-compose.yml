services:

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    environment:
      - ZOO_MY_ID=1
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    expose:
      - "9093"
    healthcheck:
      test: "kafka-topics.sh --list --zookeeper zookeeper:2181"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "endpoint-operation-log:1:1"
  
  task-rest-api:
    image: taskimg:restapi
    build: task-rest-api
    container_name: task-rest-api
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - 8080:8080

  task-database-service:
    image: taskimg:database-service
    build: task-database
    container_name: task-database-service
    depends_on:
      kafka:
        condition: service_healthy
    
  task-database:
    image: taskimg:database
    build: 
      context: ./task-database
      dockerfile: Dockerfile-MySQL
    container_name: task-database
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: kartaca
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - "mysql-db:/var/lib/mysql"

volumes:
  mysql-db: